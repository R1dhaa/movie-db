@page "{id:int?}"
@model RazorPagesMovie.Pages_Movies.IndexModel

@{
    ViewData["Title"] = "Movie List";
}

<div class="container mt-4">
    <h1 class="display-4 mb-3">Movie List</h1>

    @if (User.IsInRole("Admin"))
    {
    <div class="mb-3">
        <a class="btn btn-primary" asp-page="Create">Create New</a>
    </div>
    }

    <form method="get" class="row g-3 align-items-end mb-4">
        <div class="col-md-3">
            <label asp-for="MovieGenre" class="form-label">Genre</label>
            <select asp-for="MovieGenre" asp-items="Model.Genres" class="form-select">
                <option value="">All</option>
            </select>
        </div>

        <div class="col-md-4">
            <label asp-for="SearchString" class="form-label">Title</label>
            <input asp-for="SearchString" class="form-control" placeholder="Search by title" />
        </div>

        <div class="col-md-auto">
    <button type="submit" class="btn btn-outline-secondary">Filter</button>

    <!-- Export All -->
    <a class="btn btn-success ms-2"
       asp-page="Export"
       asp-route-SearchString="@Model.SearchString"
       asp-route-MovieGenre="@Model.MovieGenre"
       asp-route-exportMode="all">
        Export All
    </a>

    <!-- Export Current Page -->
    <a class="btn btn-warning ms-2"
       asp-page="Export"
       asp-route-SearchString="@Model.SearchString"
       asp-route-MovieGenre="@Model.MovieGenre"
       asp-route-PageIndex="@Model.PageIndex"
       asp-route-exportMode="page">
        Export Current Page
    </a>
</div>

    </form>

    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Movie[0].Title)</th>
                <th>@Html.DisplayNameFor(model => model.Movie[0].ReleaseDate)</th>
                <th>@Html.DisplayNameFor(model => model.Movie[0].Genre)</th>
                <th>@Html.DisplayNameFor(model => model.Movie[0].Price)</th>
                <th>@Html.DisplayNameFor(model => model.Movie[0].Rating)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Movie)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@item.ReleaseDate.ToString("dd-MM-yyyy")</td>
                <td>@Html.DisplayFor(modelItem => item.Genre)</td>
                <td>â‚¹ @item.Price.ToString("0.00")</td>
                <td>@Html.DisplayFor(modelItem => item.Rating)</td>
                <td>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-1">Edit</a>
                    <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-sm btn-info me-1">Details</a>
                    <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    
                }
                else
                {
                    <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                }
                </td>
            </tr>
        }
        </tbody>
    </table>
    <nav aria-label="Page navigation" class="mt-4">
    <ul class="pagination justify-content-center">

        <!-- Previous Button -->
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               asp-page="./Index"
               asp-route-PageIndex="@(Model.PageIndex - 1)"
               asp-route-SearchString="@Model.SearchString"
               asp-route-MovieGenre="@Model.MovieGenre">
                Previous
            </a>
        </li>

        <!-- Numbered Page Buttons -->
        @{
    var maxDisplayPages = 5;
    var startPage = Math.Max(1, Model.PageIndex - maxDisplayPages / 2);
    var endPage = Math.Min(Model.TotalPages, startPage + maxDisplayPages - 1);

    // Adjust startPage if near the end
    if ((endPage - startPage) < (maxDisplayPages - 1))
    {
        startPage = Math.Max(1, endPage - maxDisplayPages + 1);
    }
}
<!-- Numbered Page Buttons (limited to 5 visible pages) -->
@for (var i = startPage; i <= endPage; i++)
{
    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
        <a class="page-link"
           asp-page="./Index"
           asp-route-PageIndex="@i"
           asp-route-SearchString="@Model.SearchString"
           asp-route-MovieGenre="@Model.MovieGenre">
            @i
        </a>
    </li>
}


        <!-- Next Button -->
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               asp-page="./Index"
               asp-route-PageIndex="@(Model.PageIndex + 1)"
               asp-route-SearchString="@Model.SearchString"
               asp-route-MovieGenre="@Model.MovieGenre">
                Next
            </a>
        </li>
    </ul>
</nav>


</div>
